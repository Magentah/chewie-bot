name: Docker Image CI

on:
    push:
        branches: [master]

jobs:
    docker-build-and-push:
        runs-on: ubuntu-latest

        steps:
            - uses: actions/checkout@v2
            # Updates the config.json file name, as we store an example config.json file in the repository and don't commit the actual config file.
            # It uses a different name just so that it's less hassle when commiting
            - name: Update config file name
              run: cp ./server/src/myconfig.json ./server/src/config.json
            - name: Set up QEMU
              uses: docker/setup-qemu-action@v1
            - name: Set up Docker Buildx
              uses: docker/setup-buildx-action@v1
            - name: Login to Docker
              uses: docker/login-action@v1
              with:
                  username: ${{ secrets.dockerUsername }}
                  password: ${{ secrets.dockerKey }}

            - name: Update Server Config
              uses: microsoft/variable-substitution@v1
              with:
                  files: "./server/src/config.json"
              env:
                  twitch.clientId: ${{ secrets.twitchClientId }}
                  twitch.clientSecret: ${{ secrets.twitchClientSecret }}
                  twitch.redirectUri: ${{ secrets.twitchRedirectUri }}
                  twitch.username: ${{ secrets.twitchUsername }}
                  twitch.oauth: ${{ secrets.twitchClientOauth }}
                  twitch.broadcasterName: ${{ secrets.twitchBroadcasterName }}
                  twitch.eventSub.secret: ${{ secrets.twitchEventSubSecret }}
                  twitch.eventSub.callbackBaseUri: ${{ secrets.twitchEventSubCallbackBaseUri }}
                  youtube.apiKey: ${{ secrets.youtubeApi }}
                  secretKey: ${{ secrets.botSecretKey }}
                  streamlabs.clientId: ${{ secrets.streamlabsClientId }}
                  streamlabs.clientSecret: ${{ secrets.streamlabsClientSecret }}
                  streamlabs.redirectUri: ${{ secrets.streamlabsRedirectUri }}
                  spotify.clientId: ${{ secrets.spotifyClientId }}
                  spotify.clientSecret: ${{ secrets.spotifyClientSecret }}
                  spotify.redirectUri: ${{ secrets.spotifyRedirectUri }}
                  dropbox.clientId: ${{ secrets.dropboxClientId }}
                  dropbox.clientSecret: ${{ secrets.dropboxClientSecret }}
                  dropbox.redirectUri: ${{ secrets.dropboxRedirectUri }}
                  discord.webhookUrl: ${{ secrets.discordWebhookUrl }}
                
            - name: Copy SSL Config
              run: 'echo "$SSL_KEY" > ./client/nginx/server.key'
              shell: bash
              env: 
                SSL_KEY: ${{secrets.SSL_KEY}}
                
            - name: Copy SSL Config
              run: 'echo "$SSL_CERT" > ./client/nginx/server.crt'
              shell: bash
              env:
                SSL_CERT: ${{secrets.SSL_CERT}}
            
            - name: Build Server Docker Image
              uses: docker/build-push-action@v2
              with:
                  push: true
                  context: ./server
                  file: ./server/Dockerfile.prod
                  tags: ${{ secrets.dockerUsername }}/chewiebot:server-latest

            - name: Build Client Docker Image
              uses: docker/build-push-action@v2
              with:
                  push: true
                  context: ./client
                  file: ./client/Dockerfile.prod
                  tags: ${{ secrets.dockerUsername }}/chewiebot:client-latest

    deploy-to-digitalocean:
        needs: docker-build-and-push
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v2
            - name: Copy docker-compose.yml
              uses: appleboy/scp-action@master
              with:
                  host: ${{ secrets.sshHost }}
                  username: ${{ secrets.sshUsername }}
                  key: ${{ secrets.sshKey }}
                  port: 22
                  source: "docker-compose.yml,docker-compose.prod.yml"
                  target: "~/chewiebot"
            - name: Docker pull and run
              uses: appleboy/ssh-action@v0.1.3
              with:
                  host: ${{ secrets.sshHost }}
                  username: ${{ secrets.sshUsername }}
                  key: ${{ secrets.sshKey }}
                  script: |
                      docker login --username ${{ secrets.dockerUsername }} --password ${{ secrets.dockerKey }}
                      mkdir -p chewiebot
                      cd chewiebot
                      docker-compose -f docker-compose.yml -f docker-compose.prod.yml stop
                      docker-compose -f docker-compose.yml -f docker-compose.prod.yml pull
                      docker-compose -f docker-compose.yml -f docker-compose.prod.yml up -d
