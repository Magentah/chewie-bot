# This workflow will do a clean install of node dependencies, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: Node.js CI

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:

    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [10.x]

    steps:
      - uses: actions/checkout@v2
        
      - name: Update config
        uses: microsoft/variable-substitution@v1
        with: 
          files: './server/src/config.json'
        env:  
          twitch.client_id: ${{ secrets.twitchClientId }}
          twitch.client_secret: ${{ secrets.twitchClientSecret }}
          twitch.redirect_uri: ${{ secrets.twitchRedirectUri }}
          twitch.username: ${{ secrets.twitchUsername }}
          twitch.oauth: ${{ secrets.twitchOauth }}
          youtube.api: ${{ secrets.youtubeApi }}
          secretKey: ${{ secrets.botSecretKey }}
          
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}
          
      - name: SCP Files
        uses: easingthemes/ssh-deploy@v2.1.4
        with:
          remote_host: ${{ secrets.sshHost }}
          remote_user: ${{ secrets.sshUsername }}
          ssh_private_key: ${{ secrets.sshKey }}
          source: ""
          target: "chewiebot"          

      - name: Run SSH command
        # You may pin to the exact commit or the version.
        # uses: garygrossgarten/github-action-ssh@82be6a0a8f37f042997000728429fd355f2f5dda
        uses: garygrossgarten/github-action-ssh@v0.5.0
        with:
          # Command to execute on the remote server.
          command: cd server && yarn setup && yarn build
          # Hostname or IP address of the server.
          host: ${{ secrets.sshHost }}
          # Username for authentication.
          username: ${{ secrets.sshUsername }}
          # port:
          # File Location or string that contains a private key for either key-based or hostbased user authentication (OpenSSH format)
          privateKey: ${{ secrets.sshKey }}
          # Password for password-based user authentication.
          #password: # optional
          # For an encrypted private key, this is the passphrase used to decrypt it.
          #passphrase: # optional
          # Try keyboard-interactive user authentication if primary user authentication method fails.
          #tryKeyboard: # optional
